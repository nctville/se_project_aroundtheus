!function(){"use strict";var e=class{constructor(e,t){this._formEl=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.remove(this._errorClass)}_enableBtn(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}toggleButtonState(){this._hasInvalidInput()?this.disableBtn(this._submitBtn):this._enableBtn(this._submitBtn)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitBtn=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}},t=class{constructor(e,t,s,n,r){this._name=e.name,this._link=e.link,this.cardId=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handleDeleteClick=s,this.handleLikeClick=n,this._handleImageClick=r}_updateLikes(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this.handleLikeClick(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}handleDeleteIcon(){this._cardElement.remove(),this._cardElement=null}getView(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardTitle=this._cardElement.querySelector(".card__location"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this._likeButton=this._cardElement.querySelector(".card__like-button"),this._updateLikes(),this._setEventListeners(),this._cardElement}},s=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&(this.close(),e.preventDefault())}_setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal_opened")&&this.close(),e.target.classList.contains("modal__close")&&this.close()}))}},n=class extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=s,this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super._setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}close(){this._popupForm.reset(),super.close()}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}},r=class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}};const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};const o=document.querySelector("#profile-edit-modal").querySelector(".modal__form"),a=document.querySelector("#add-card-modal").querySelector(".modal__form"),l=document.querySelector("#avatar-form"),c=document.querySelector(".profile__add-button"),d=document.querySelector(".profile__avatar-btn"),h=document.querySelector(".profile__edit-button"),_=document.querySelector(".modal__input_type_name"),u=document.querySelector(".modal__input_type_description"),m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}getInitialInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>{this._handleResponse(e)}))}dislikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>{this._handleResponse(e)}))}patchProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.description})}).then((e=>{this._handleResponse(e)}))}patchAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"c06cb1ea-bab9-48c7-8798-47ebeebe8696","Content-Type":"application/json"}});let p;function b(e){return new t(e,"#card-template",S,E,((e,t)=>{C.open({link:t,name:e})})).getView()}m.getInitialCards().then((e=>{p=new r({items:e,renderer:b},".cards__list"),p.renderItems()})).catch((e=>{console.error(e)}));const v=new class{constructor(e){let{nameSelector:t,jobSelector:s,avatarSelector:n}=e;this._name=document.querySelector(t),this._job=document.querySelector(s),this._avatar=document.querySelector(n)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{name:t,description:s}=e;this._name.textContent=t,this._job.textContent=s}setAvatarImg(e){this._avatar.src=e}}({nameSelector:".profile__name",jobSelector:".profile__description",avatarSelector:".profile__picture"});function S(e){y.open(),y.setSubmitAction((()=>{m.deleteCard(e.cardId).then((()=>{y.close(),e.handleDeleteIcon()})).catch((e=>{console.error(e)}))}))}function E(e){e.isLiked?m.dislikeCard(e.cardId).then((()=>{e.handleLikeIcon()})).catch((e=>{console.error(e)})):m.likeCard(e.cardId).then((()=>{e.handleLikeIcon()})).catch((e=>{console.error(e)}))}m.getInitialInfo().then((e=>{v.setAvatarImg(e.avatar),v.setUserInfo({name:e.name,description:e.about})})).catch((e=>{console.error(e)}));const L=new n({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){L.setLoading(!0),m.patchProfileInfo(e).then((()=>{v.setUserInfo({name:e.name,description:e.description}),L.close()})).catch((e=>{console.error(e)})).finally((()=>L.setLoading(!1,"Save")))}});L.setEventListeners();const f=new n({popupSelector:"#add-card-modal",handleFormSubmit:function(e){let{title:t,url:s}=e;f.setLoading(!0),m.addNewCard({name:t,link:s}).then((e=>{p.addItem(e),f.close()})).catch((e=>{console.error(e)})).finally((()=>f.setLoading(!1,"Create")))}});f.setEventListeners();const k=new n({popupSelector:"#avatar-modal",handleFormSubmit:function(e){k.setLoading(!0),m.patchAvatar(e.url).then((e=>{v.setAvatarImg(e.avatar),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.setLoading(!1,"Save")}))}});k.setEventListeners();const y=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._saveButton=this._popupForm.querySelector(".modal__button"),this._saveButtonText=this._saveButton.textContent}setSubmitAction(e){this._handleFormSubmit=e}setLoading(e){this._submitButton.textContent=e?"Deleting...":this._submitButtonText}setEventListeners(){super._setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()}))}}({popupSelector:"#delete-card-modal"});y.setEventListeners();const C=new class extends s{constructor(e){let{popupSelector:t}=e;super({popupSelector:t}),this._image=this._popupElement.querySelector(".modal__preview"),this._caption=this._popupElement.querySelector(".modal__caption")}open(e){let{link:t,name:s}=e;this._image.src=t,this._image.alt=s,this._caption.textContent=s,super.open()}}({popupSelector:"#modal__preview-image"});C._setEventListeners(),new e(i,o).enableValidation();const I=new e(i,a);I.enableValidation();const g=new e(i,l);g.enableValidation(),h.addEventListener("click",(()=>{const e=v.getUserInfo();_.value=e.name,u.value=e.job,L.open()})),c.addEventListener("click",(()=>{I.disableBtn(),f.open()})),d.addEventListener("click",(()=>{g.disableBtn(),k.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,